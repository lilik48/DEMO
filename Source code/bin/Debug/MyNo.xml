<?xml version="1.0"?>
<doc>
<assembly>
<name>
MyNo
</name>
</assembly>
<members>
<member name="M:MyNo.frmMNUIDTR200.frmMNUIDTR200_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
	<summary>
 frmMNUIDTR200 Paint
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR200.frmMNUIDTR200_Load(System.Object,System.EventArgs)">
	<summary>
 frmMNUIDTR200 Load
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR200.ChangePage(System.Object,System.EventArgs)">
	<summary>
 Event change page of datagridview
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR200.btnClose_Click(System.Object,System.EventArgs)">
	<summary>
 Close Form
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR200.btnFileChoose_Click(System.Object,System.EventArgs)">
	<summary>
 Choose file csv
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR200.btnImport_Click(System.Object,System.EventArgs)">
	<summary>
 Import data from csv to db
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR200.btnClear_Click(System.Object,System.EventArgs)">
	<summary>
 Clear condition export
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR200.dgvImportLog_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 Cell click
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR200.btnExport_Click(System.Object,System.EventArgs)">
	<summary>
 Export csv
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIMTN410.SetLockAndUnlockControl(System.Int32)">
	<summary>
     SetLockAndUnlockControl
 </summary>
	<param name="in_intStatusLock">isLock as Integer.</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIIMT100CLT.Log(System.String,System.Int32)">
	<summary>
     Write log
 </summary>
	<param name="in_strSQL">Query SQL get records</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIIMT100CLT.GetDataCompanyForOutput(System.String,System.String,System.String,System.String,System.String@)">
	<summary>
     Get data for out put company
 </summary>
	<author>ThongTH</author>
	<date>2015/07/30</date>
	<param name="in_strCompanyCD">Company code</param>
	<param name="in_strCompanyName">Company Name</param>
	<param name="in_strBranchNo">Branch No</param>
	<param name="in_strBranchName">Branch Name</param>
	<returns>List data</returns>
	<remarks></remarks>
</member><member name="M:MyNo.modForm.GetConnectionStringPrimaryDB">
	<summary>
 Get ConnectionString of Primary database
 </summary>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIMTN400.SetLockAndUnlockControl(System.Boolean)">
	<summary>
 SetLockAndUnlockControl
 </summary>
	<param name="isLock">isLock as boolean.</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUILGN100CTL.Validate(System.String,System.String)">
	<summary>
     Validate data input
 </summary>
	<param name="in_strUserCD">User Code</param>
	<param name="in_strPassword">Password</param>
	<remarks>
     Return: False - not input UserCD or Password.
     True - otherwise
 </remarks>
</member><member name="M:MyNo.MNUILGN100CTL.CheckLogin(System.String,System.String)">
	<summary>
     Check login
 </summary>
	<param name="in_strUserCD">User Code</param>
	<param name="in_strPassword">Password</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUILGN100CTL.GetUserMasterByUserCD(System.String)">
	<summary>
     Get User by UserCD
 </summary>
	<param name="in_strUserCD">User Code</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIMTN410CTL.GetUserByUserCd(System.String)">
	<summary>
     Get user by usercd
 </summary>
	<param name="in_strUserCd">userCd</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIMTN410CTL.RandomString">
	<summary>
     Get random string
 </summary>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIMTN410CTL.CheckInput(System.String,System.String,System.String,System.String,System.Int32)">
	<summary>
     CheckInput
 </summary>
	<param name="in_strUserCD">userCD</param>
	<param name="in_strUserName">userName</param>
	<param name="in_strAuthorityCD">authorityCD</param>
	<param name="in_strOneTimePassword">oneTimePassword</param>
	<param name="in_intUserMaintenanceFlag">userMaintenanceFlag</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIMTN410CTL.CheckUserExist(System.String)">
	<summary>
     CheckUserExist
 </summary>
	<param name="in_strUserCD">userCD</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIMTN410CTL.InsertNewUser(System.String,System.String,System.String,System.String)">
	<summary>
     InsertNewUser
 </summary>
	<param name="in_strUserCD">userCD</param>
	<param name="in_strName">name</param>
	<param name="in_strOnetimePassword">onetimePassword</param>
	<param name="in_strAuthoritycd">authoritycd</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIMTN410CTL.UpdateUser(System.String,System.String,System.String,System.String)">
	<summary>
     UpdateUser
 </summary>
	<param name="in_strUserCD">userCD</param>
	<param name="in_strName">name</param>
	<param name="in_strOnetimePassword">onetimePassword</param>
	<param name="in_strAuthoritycd">authoritycd</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIMTN410CTL.DeleteUser(System.String)">
	<summary>
     DeleteUser
 </summary>
	<param name="in_strUserCD">userCD</param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIIMT100.CheckInput(System.Windows.Forms.Control)">
	<summary>
 Check before search data
 </summary>
	<param name="ctl">Control</param>
	<returns>True, False</returns>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIIMT100.InitForm">
	<summary>
 Load Form Default
 </summary>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIIMT100.ControlEnable(System.Int32)">
	<summary>
 Change state btnAddNew
 </summary>
	<param name="in_intUpdate"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIIMT100.btnClose_Click(System.Object,System.EventArgs)">
	<summary>
 Close Form
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIIMT100.LoadDtgrv(System.Object)">
	<summary>
 Fill data to datagridview
 [Todo Chưa test phần hiển thị màu khi quá hạn]
 </summary>
	<param name="in_lstListCompany"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIIMT100.dtgrvCompany_CellContentClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 Click Cell labelLink
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIIMT100.btnClear_Click(System.Object,System.EventArgs)">
	<summary>
 Clear txtCompanyCD, txtCompanyName, txtBranchNo, txtBranchName
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIIMT100.CheckInputText(System.Object,System.EventArgs)">
	<summary>
 Check validate txt
 [Todo Tag = 1 yet set]
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIIMT100.GetOldTextOfTextBox(System.Object,System.EventArgs)">
	<summary>
 Get txt.Value before change text
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.GetDataImportLogsPaging(System.Int32,System.Int32,System.Boolean)">
	<summary>
 Get Data ImportLogs Paging
 </summary>
	<param name="in_intNumItem"></param>
	<param name="in_intNumPage"></param>
	<param name="in_blnFlagNextPage"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.CheckInputSingle(System.Windows.Forms.Control@,System.Windows.Forms.Control@,System.Windows.Forms.Control@)">
	<summary>
 Check input data on screen
 </summary>
	<param name="in_strCompanyCd">companyCd as String</param>
	<param name="in_strCompanyBranchNo">companyBranchNo as String</param>
	<param name="in_strFilePath">filePath as String</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.CheckInputCorrelation(System.String,System.String,System.String,System.Int32)">
	<summary>
 CheckInputCorrelation
 </summary>
	<param name="in_strCompanyCd"></param>
	<param name="in_strCompanyBranchNo"></param>
	<param name="in_strFilePath"></param>
	<param name="in_intFileType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.ProcessDataBasic(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
	<summary>
 Process data from csv file and import to DB
 </summary>
	<param name="in_strCompanyCd"></param>
	<param name="in_strBranchCd"></param>
	<param name="in_strPathFile"></param>
	<param name="in_intFileType"></param>
	<param name="in_intImportType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.ImportLog(MyNo.MyNoEntities@,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
	<summary>
 ImportLog - 6.1.1.4.b
 </summary>
	<param name="inout_context"></param>
	<param name="in_strCompanyCd"></param>
	<param name="in_strCompanyBranchNo"></param>
	<param name="in_strFilePath"></param>
	<param name="in_intFileType"></param>
	<param name="in_intImportType"></param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.ImportFromCsv(MyNo.MyNoEntities@,System.Int32,System.String,System.String,System.String,System.Int32)">
	<summary>
 ImportFromCsv - 6.1.1.5
 </summary>
	<param name="inout_context"></param>
	<param name="in_intImportSeq">seq auto zen in table t_importlog</param>
	<param name="in_strCompanyCd"></param>
	<param name="in_strCompanyBranchNo"></param>
	<param name="in_strFilePath"></param>
	<param name="in_intFileType"></param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.GetDataImportAnndCheckErr(System.Collections.Generic.List{MyNo.w_private}@,System.Collections.Generic.List{MyNo.w_family}@,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,MyNo.MyNoEntities@,System.Int32@)">
	<summary>
 Get data import And Check Err - 6.1.1.6, 6.1.1.7
 </summary>
	<param name="inout_lstwPrivate"></param>
	<param name="inout_lstwFamily"></param>
	<param name="in_intFileType"></param>
	<param name="in_intImportType"></param>
	<param name="in_strFilePath"></param>
	<param name="in_strCompCode"></param>
	<param name="in_strBranchCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.CheckDataCsvFileFamilyOn(MyNo.MyNoEntities,System.Int32,System.Collections.Generic.List{MyNo.w_family},System.String,System.String,System.Int32,System.Int32@,System.Int32@)">
	<summary>
 Check Data Csv File in the case Family On
 </summary>
	<param name="in_context"></param>
	<param name="in_intSeq"></param>
	<param name="in_lstQuerywFamily"></param>
	<param name="in_strCompCode"></param>
	<param name="in_strBranchCode"></param>
	<param name="in_intImportType"></param>
	<param name="inout_intErrCount"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.CheckDataCsvFilePrivateOn(MyNo.MyNoEntities,System.Int32,System.Collections.Generic.List{MyNo.w_private},System.String,System.String,System.Int32,System.Int32@)">
	<summary>
 Check data csv file in the case private on
 </summary>
	<param name="in_context"></param>
	<param name="in_intSeq"></param>
	<param name="in_lstQuerywPrivate"></param>
	<param name="in_strCompCode"></param>
	<param name="in_strBranchCode"></param>
	<param name="in_intImportType"></param>
	<param name="inout_intErrCount"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.ImportDetailLog(MyNo.MyNoEntities@,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
	<summary>
 Import data to table t_importdetaillog
 </summary>
	<param name="inout_context">context as mynoEntities</param>
	<param name="in_intSeq">SEQ as String</param>
	<param name="in_intLine">line as Integer</param>
	<param name="in_strMessage">message as String</param>
	<param name="in_strRecData">recData as String</param>
	<param name="in_intColData">colData as String</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.ProcessDataImport(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.List{MyNo.w_private},System.Collections.Generic.List{MyNo.w_family},MyNo.MyNoEntities@,System.Int32@)">
	<summary>
 Import data to DB and finish process
 </summary>
	<param name="in_srtFilePath"></param>
	<param name="in_intSeq"></param>
	<param name="in_strCompanyCd"></param>
	<param name="in_strBranchNoCd"></param>
	<param name="in_intFileType"></param>
	<param name="in_intImportType"></param>
	<param name="in_lstwPrivate"></param>
	<param name="in_lstwFamily"></param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.ExportCsv(System.Int32)">
	<summary>
 Export file Csv
 </summary>
	<param name="in_StrSeq"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.GetDataForExportXlsx(System.String@,MyNo.MyNoEntities@,System.Int32)">
	<summary>
 Get data for export xlsx in table t_importlog and t_importdetaillog
 </summary>
	<param name="out_Query"></param>
	<param name="mynoContext"></param>
	<param name="in_Seq"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR100CTL.ExportXlsxListError(System.Collections.Generic.List{MyNo.ItemListImport},MyNo.MyNoEntities,System.String,System.Int32,System.String@)">
	<summary>
 xlsx export file
 </summary>
	<param name="in_lstGetListError"></param>
	<param name="in_context"></param>
	<param name="in_strQuery"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.InputLogMaster(MyNo.MyNoEntities@,System.String,System.String,System.String,System.Int32)">
	<summary>
 Input Log to T_SYSTEMLOG
 <author>ThangNB</author>
		<updatedate>2015/06/30</updatedate>
		<content>
 - Add ByRef context
 </content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.InputLogDetail(MyNo.MyNoEntities@,System.Int64,System.String,System.String,System.String)">
	<summary>
 Input Log to T_SYSTEMDETAILLOG
 <author>ThangNB</author>
		<updatedate>2015/06/30</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.ShowMessage(System.String,System.String,System.String,System.String)">
	<summary>
 Show message common
 <author>ThangNB</author>
		<updatedate>2015/06/26</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.ShowMessageConfirm(System.String,System.String,System.String,System.String,System.Windows.Forms.MessageBoxDefaultButton)">
	<summary>
 Show message common - type: confirm
 <author>MapPV</author>
		<updatedate>2015/06/30</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.ShowMessageConfirmFocusCancel(System.String,System.String,System.String,System.String)">
	<summary>
 Show message common - type: confirm, focus cancel
 <author>MapPV</author>
		<updatedate>2015/06/30</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.GetMessageFromIni(System.String)">
	<summary>
 Get conten message from ini file
 <author>MapPV</author>
		<updatedate>2015/06/26</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.GetMessageContent(System.String,System.String,System.String,System.String)">
	<summary>
 Get message
 <author>AnhND</author>
		<updatedate>2015/07/03</updatedate>
		<content>
 get only string message, don't show dialog _ todo
 </content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidatInputDate(System.String)">
	<summary>
 Check input date into cell degit or /
 <author>ThienNQ</author>
		<updatedate>2015/08/12</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateDateInCell(System.String)">
	<summary>
 Check input date into cell format yy/MM/dd or yyMMdd
 <author>ThienNQ</author>
		<updatedate>2015/08/12</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateCompanyBranchNoIsNumber(System.String)">
	<summary>
 Check validate Company BranchNo input text is number + "," like "123,123,123" 
 <author>AnhPD</author>
		<updatedate>2015/07/16</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateCompanyBranchNo(System.String)">
	<summary>
 Check validate Company BranchNo input text with number and , 
 <author>AnhPD</author>
		<updatedate>2015/07/16</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateJapaneseCalendar(System.String)">
	<summary>
 Check validate Japanese Calendar format
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.ConvertJapaneseToWorldCalendar(System.String)">
	<summary>
 convert Japanese Calendar -&gt; world calendar format
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.ConvertWorldToJapaneseCalendar(System.Nullable{System.DateTime})">
	<summary>
 convert to world Calendar -&gt; japanes calendar format
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateOnlyKatakanaHalfsizeLess30byte(System.String)">
	<summary>
 Check validate katakana input text (include "space", half size and less 30 byte)
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateOnlyKatakanaFullsizeLess30byte(System.String)">
	<summary>
 Check validate katakana input text (include "space",fullsize and less 30 byte)
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateOnlyKatakanaHalfsize(System.String)">
	<summary>
 Check validate katakana input text (include "space" and half size)
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateOnlyHiragana(System.String)">
	<summary>
 Check validate hiragana input text (include "space")
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateOnlyKatakanaFullsize(System.String)">
	<summary>
 Check validate katakana input text (include "space" and fullsize)
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateOnlyKanjiLess30Byte(System.String)">
	<summary>
 Check validate kanji Less 30 Byte input text (include "space")
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateOnlyKanji(System.String)">
	<summary>
 Check validate kanji input text (include "space")
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckExternalCharacter(System.String)">
	<summary>
 Check External Character
 <author>MapPV</author>
		<updatedate>2015/06/30</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateOnlyLeter(System.String)">
	<summary>
 Check validate Only Letter
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateLetterOrNumber(System.String)">
	<summary>
 Check validate Letter or Number
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidaLess20BitInput(System.String)">
	<summary>
 check textbox have less than 20 input charater
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidaLess30BitInput(System.String)">
	<summary>
 check textbox have less than 30 input charater
 <author>ThangNB</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidaLess2BitInput(System.String)">
	<summary>
 check textbox have less than 2 input charater
 <author>ThangNB</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidaLess3BitInput(System.String)">
	<summary>
 check textbox have less than 3 input charater
 <author>ThangNB</author>
		<updatedate>2015/07/20</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidaLess8BitInput(System.String)">
	<summary>
 check textbox have less than 8 input charater
 <author>ThangNB</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidaLess80BitInput(System.String)">
	<summary>
 check textbox have less than 80 input charater
 <author>ThangNB</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidaLess13BitInput(System.String)">
	<summary>
 check textbox have less than 13 input charater
 <author>ThangNB</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidaLess50BitInput(System.String)">
	<summary>
 check textbox have less than 50 input charater
 <author>ThangNB</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateOnlyNumber(System.String)">
	<summary>
 Check validate with textbox only number
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidate3Digit(System.String)">
	<summary>
 Check validate textbox with 3 digit only number
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidate5Word(System.String)">
	<summary>
 Check validate with textbox 5 any word or number
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidaLess5BitInput(System.String)">
	<summary>
 Check validate with textbox 5 any word or number
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidaLess10BitInput(System.String)">
	<summary>
 Check validate with textbox 10 any word or number
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidate20Word(System.String)">
	<summary>
 Check validate with textbox 20 any word or number
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidAlphanumeric(System.String)">
 ''' <summary>
 Check validate Alphanumeric
 </summary>
	<param name="text">Text input</param>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateBarcode(System.String)">
	<summary>
 Check valid barcode
 <author>AnhPD</author>
		<updatedate>2015/07/01</updatedate>
		<content>
		</content>
	</summary>
	<remarks>
 check validate barcode have type like 'aaa111-123-aaa222'
 todo
 </remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateHoursType(System.String)">
	<summary>
 Check validate with Hours type is "HH:MM"
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateDateType(System.String)">
	<summary>
 check datetime type is "yyyy/MM/dd" and exist
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateDateMulType(System.String)">
	<summary>
 check datetime type is "yyyy/MM/dd"; "yyyy/M/d" and exist
 <author>ThangNB</author>
		<updatedate>2015/07/27</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckStartDateAndEndDate(System.String,System.String)">
	<summary>
 Compare start date and end date
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.checkLength(System.String,System.Int32)">
	<summary>
 Enter the number of digits check
 </summary>
	<author>ThongTH</author>
	<updatedate>2015/07/29</updatedate>
	<param name="text">text input</param>
	<param name="length">max length</param>
	<returns>false: number byte of text input bigger than more max length of text, true:else</returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckDirectoryExists(System.String)">
	<summary>
 Check directory exists
  <author>ThongTH</author>
		<updatedate>2015/07/29</updatedate>
	</summary>
	<param name="directory">true: exists, false: not exist</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidateMyNumber(System.String)">
	<summary>
 Check the soundness of MyNumber
 </summary>
	<param name="in_strMyNumber"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.GenMyNumber(System.String)">
	<summary>
 Check the soundness of MyNumber
 </summary>
	<param name="in_strMyNumber"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CountDigitInString(System.String)">
	<summary>
 Count digit in strings
 <author>ThangNB</author>
		<updatedate>2015/07/13</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CompareCode(System.String,System.String)">
	<summary>
 Compare code
 <author>MapPV</author>
		<updatedate>2015/08/03</updatedate>
		<content>
 If start &gt; end =&gt; return false
 </content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CheckValidCompanyCdOrStaffCd(System.String)">
 ''' <summary>
 Check validate CompanyCD insert
 </summary>
	<param name="text">Text input</param>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.EncryptSha256(System.String)">
	<summary>
 Encrypt Sha256
 <author>MapPV</author>
		<updatedate>2015/06/30</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.EncryptAes(System.String,System.String)">
	<summary>
 Encrypt Aes
 <author>MapPV</author>
		<updatedate>2015/06/30</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.DecryptAes(System.String,System.String)">
	<summary>
 Decrypt Aes
 <author>MapPV</author>
		<updatedate>2015/06/30</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.GetAuthorityByApp(System.String,System.String)">
	<summary>
 GetAuthorityByApp
 </summary>
	<param name="appcd">appcd input</param>
	<param name="authorityCd">authorityCd input</param>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.GetCpuId">
	<summary>
 get Computer computer
 <author>AnhPD</author>
		<updatedate>2015/07/01</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.SetTitleScreen">
	<summary>
 Get title screen
 <author>MapPV</author>
		<updatedate>2015/07/01</updatedate>
		<content>
		</content>
	</summary>
	<remarks>
 todo
 </remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.DictionaryLogType">
	<summary>
 Get LogType for cboLogType in MNUIMTN500
 <author>AnhPD</author>
		<updatedate>2015/07/10</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.GetConfig(System.String,System.String)">
	<summary>
 Get config constant path save file generate xlsx
 </summary>
	<author>ThangNB</author>
	<updatedate>2015/07/10</updatedate>
	<param name="key"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.GetCurrentTimestamp(MyNo.MyNoEntities@)">
	<summary>
 get current time in database
 <author>MapPV</author>
		<updatedate>2015/06/26</updatedate>
		<content>
		</content>
	</summary>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CreateCsvDataFromObject(System.Object)">
	<summary>
 Creates a csv data format from object
 </summary>
	<param name="objData">object.</param>
	<returns>string.</returns>
</member><member name="M:MyNo.Common.MNBTCMN100.CreateCsvDataImport(System.Object)">
	<summary>
 Creates a csv data format from object
 </summary>
	<param name="objData">object.</param>
	<returns>string.</returns>
</member><member name="M:MyNo.Common.MNBTCMN100.GetSysGuid(MyNo.MyNoEntities@)">
	<summary>
 get SYS_GUID from DB
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.GetPrevious``1(System.Collections.Generic.IEnumerable{``0},``0)">
	<summary>
 Get previous record
 ThongTH
 </summary>
	<typeparam name="T"></typeparam>
	<param name="list"></param>
	<param name="current"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.SetEmptyToNothing``1(``0@)">
	<summary>
 If data is empty then set to NULL
 </summary>
	<typeparam name="T"></typeparam>
	<param name="current"></param>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CnvDateYYYYMMDD(System.String)">
	<summary>
 Convert datatime to yyyy/MM/dd
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CnvDateYYYYMMDDHHMM(System.Nullable{System.DateTime})">
	<summary>
 Convert datatime to yyyy/MM/dd HH:MM
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CnvDateYYYYMMDDHHMMSS(System.Nullable{System.DateTime})">
	<summary>
 Convert datatime to yyyy/MM/dd HH:MM:SS
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CnvBlnDbNull(System.Nullable{System.Int32})">
	<summary>
 Check value for checkbox
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CnvIntegerDbNull(System.Object)">
	<summary>
 Convert to interger
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CnvDbNullToString(System.Object)">
	<summary>
 Convert value to string
 </summary>
	<param name="value">string type</param>
	<returns>string</returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CnvDateYYYYMMDD(System.Nullable{System.DateTime})">
	<summary>
 Convert datatime to yyyy/MM/dd
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.ConvertCalendarJPToWordFromCell(System.String)">
	<summary>
 Convert From yy/MM/dd to yy年MM月dd日
 </summary>
	<param name="in_strCalendar"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.FormatCalendarJP(System.String)">
	<summary>
 Convert From yy/MM/dd to yy年MM月dd日
 </summary>
	<param name="in_strCalendar"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.NamedPartCompanyExport(System.String,System.String)">
	<summary>
 Set name for export file, part company and branch code
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.Common.MNBTCMN100.CbbInitEvent(System.Windows.Forms.ComboBox@)">
	<summary>
 Set event Keypress, keydown for combobox
 </summary>
	<param name="cbb">ComboBox</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.GetDataImportPaging(System.Int32,System.Int32,System.Boolean,MyNo.MyNoEntities@,System.String@,System.Int32@)">
	<summary>
 Load form 
 </summary>
	<param name="in_intNumItem">record display in one page</param>
	<param name="in_intNumPage">page number</param>
	<param name="in_blnFlagNextPage">flag previous or next</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.ValidateInputImport(System.String)">
	<summary>
 Check validate input file path for import data
 </summary>
	<param name="in_strUrlPath"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.ProcessImportCompany(System.String)">
	<summary>
 import company data from csv file
 </summary>
	<param name="in_strPathFile"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.ImportLog(MyNo.MyNoEntities,System.Int32,System.String)">
	<summary>
 Insert data form table t_importlog
 </summary>
	<param name="p_mynoContext"></param>
	<param name="in_intSeq"></param>
	<param name="in_strFilePath"></param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.ImportFromCsv(MyNo.MyNoEntities,System.Int32,System.String)">
	<summary>
 Import data from csv to db table w_company
 </summary>
	<param name="p_mynoContext"></param>
	<param name="in_intSeq"></param>
	<param name="in_strFilePath"></param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.ProcessCsv(System.Int32,System.String,MyNo.MyNoEntities@)">
	<summary>
 Process data in file csv
 </summary>
	<param name="in_intSeq"></param>
	<param name="in_strFilePath"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.InsertTComapy(MyNo.MyNoEntities@,System.Collections.Generic.List{MyNo.w_company},System.Int32@)">
	<summary>
 Add data to table t_company
 </summary>
	<param name="inout_context"></param>
	<param name="lstwCompany"></param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.CheckErrorCsv(MyNo.MyNoEntities@,System.Int32,System.Collections.Generic.List{MyNo.w_company})">
	<summary>
 Check error from file csv
 </summary>
	<param name="inout_context"></param>
	<param name="in_intSeq"></param>
	<param name="lstwCompany"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.ImportDetailLog(MyNo.MyNoEntities@,System.Int32,System.Int32,System.String,System.String,System.String)">
	<summary>
 Insert data to table t_importdetaillog
 </summary>
	<param name="inout_context"></param>
	<param name="in_intSeq"></param>
	<param name="in_intLine"></param>
	<param name="in_strMessage"></param>
	<param name="in_strRecData"></param>
	<param name="in_intColData"></param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.ExportCsvLinkFileName(MyNo.MyNoEntities@,System.Int32)">
	<summary>
 Export file csv by Link fileName
 </summary>
	<param name="inout_mynoContext"></param>
	<param name="in_intSeq"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.GetDataExportXlsx(MyNo.MyNoEntities@,System.Int32,System.String@)">
	<summary>
 Get Data For Export Xlsx
 </summary>
	<param name="inout_mynoContext"></param>
	<param name="in_intSeq"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.ValidateExport(System.String,System.String,System.String,System.String)">
	<summary>
 Validate export csv by company
 </summary>
	<param name="companyCd"></param>
	<param name="branchCd"></param>
	<param name="branchCdStart"></param>
	<param name="branchCdEnd"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIDTR200CTL.ExportCsv(System.String,System.String,System.String,System.String)">
	<summary>
 Export csv company
 </summary>
	<param name="companyCd"></param>
	<param name="branchCd"></param>
	<param name="branchCdStart"></param>
	<param name="branchCdEnd"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIMTN400CTL.GetListAuthorityCDs">
	<summary>
     Set data to cmbAuthorityCD
 </summary>
	<remarks></remarks>
</member><member name="M:MyNo.MNUIMTN400CTL.GetListUsers(System.String,System.String,System.String)">
	<summary>
     Set data to dgvUser
 </summary>
	<param name="in_strUserCd">userCd</param>
	<param name="in_strUserName">userName</param>
	<param name="in_strAuthorityCd">authorityCd</param>
	<remarks></remarks>
</member><member name="M:MyNo.CustomDataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
	<summary>
 Tab in cells are: link, can input
 </summary>
	<param name="keyData"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.CustomDataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
	<summary>
 Tab in cells are: link, can input
 </summary>
	<param name="e"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyNo.CustomDataGridView.CustomDataGridView_Enter(System.Object,System.EventArgs)">
	<summary>
 Focus to the first cell is can input or link
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.CustomDataGridView.CountColumnVisible">
	<summary>
 Get columns visible
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:MyNo.CustomDataGridView">
	<summary>  
 DataGridView fill data will be not flicker
 </summary>
</member><member name="T:MyNo.BoxItem">
	<summary>
 Set item for comboboxcell
 </summary>
	<remarks></remarks>
</member><member name="M:MyNo.MNUILGN110CTL.CheckInput(System.String,System.String,System.String,System.String)">
	<summary>
     Check validate with textbox only letter
 </summary>
	<param name="in_strUserCD">userCD</param>
	<param name="in_strPasswordHistory">passwordHistory</param>
	<param name="in_strPasswordNew">passwordNew</param>
	<param name="is_strPasswordConfirm">passwordConfirm</param>
	<remarks></remarks>
</member><member name="M:MyNo.MNUILGN110CTL.CheckValidPasswordCharacter(System.String)">
	<summary>
     Check valid password: input more than two type character
 </summary>
	<remarks></remarks>
</member><member name="M:MyNo.MNUILGN110CTL.SaveChangePassword(System.String,System.String,System.String)">
	<summary>
     Save Change Password
 </summary>
	<remarks></remarks>
</member><member name="P:MyNo.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:MyNo.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:MyNo.My.Resources.Resources.barcode">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:MyNo.My.Resources.Resources.Untitled">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:MyNo.My.Resources.Resources.Untitled1">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="T:MyNo.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:MyNo.frmMNUIDTR100.SetLockAndUnlockControl(System.Int32)">
	<summary>
 SetLockAndUnlockControl
 </summary>
	<param name="in_intStatus">status as Integer.</param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR100.MNUIDTR100_Load(System.Object,System.EventArgs)">
	<summary>
 Load Form
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR100.changePage(System.Object,System.EventArgs)">
	<summary>
 Event change page of datagridview
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR100.btnFileChoose_Click(System.Object,System.EventArgs)">
	<summary>
 File Choose Click
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR100.btnImport_Click(System.Object,System.EventArgs)">
	<summary>
 Button Import data click
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR100.dgvImportLog_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 Cell Click dgvImportLog
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR100.btnClose_Click(System.Object,System.EventArgs)">
	<summary>
 Close Form
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:MyNo.frmMNUIDTR100.frmMNUIDTR100_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
	<summary>
 frmMNUIDTR100 Paint
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member>
</members>
</doc>